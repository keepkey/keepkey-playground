const { KeepKeySdk } = require("@keepkey/keepkey-sdk")

let spec = 'http://localhost:1646/spec/swagger.json'

let run_test = async function () {
    try {
        let config = {
            apiKey: process.env['SERVICE_KEY'] || '1fa0c776-eaa9-499d-a2e5-f76af6073912',
            pairingInfo:{
                name: process.env['SERVICE_NAME'] || 'KeepKey SDK Demo App',
                imageUrl: process.env['SERVICE_IMAGE_URL'] || 'https://github.com/BitHighlander/keepkey-desktop/raw/master/electron/icon.png',
                basePath:spec,
                url:"http://localhost:1646"
            }
        }
        //init
        const sdk = await KeepKeySdk.create(config)
        console.log("newKey: ",config.apiKey)

        let input = {
            "addressNList": [
                2147483692,
                2147483708,
                2147483649,
                0,
                0
            ],
            "chainId": "0x1",
            "data": "",
            "gasLimit": "0x2acc0",
            "to": "0x049aba7510f45ba5b64ea9e658e342f904db358d",
            "value": "0x0",
            "nonce": "0x22"
        }

        let responseSign = await sdk.eth.ethSignTransaction(input)
        console.log("responseSign: ", responseSign.data)
        console.log("responseSign: ", responseSign.data.signedTx)
        console.log("responseSign: ", JSON.stringify(responseSign))

    } catch (e) {
        console.error(e)
        console.log("e: ", Object.keys(e))
        console.log("e: ", e.response)
        // console.log("e: ", Object.keys(e.name.toString()))
        // console.log("e: ", Object.keys(e.response.toString()))
        // console.log("e: ", e.response)

        console.log("e: ", e.response.toString())
    }
}

run_test()
